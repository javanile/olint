var data = {lines:[
{"lineNum":"    1","line":"#!/bin/sh"},
{"lineNum":"    2","line":""},
{"lineNum":"    3","line":"# An example hook script to verify what is about to be pushed.  Called by \"git"},
{"lineNum":"    4","line":"# push\" after it has checked the remote status, but before anything has been"},
{"lineNum":"    5","line":"# pushed.  If this script exits with a non-zero status nothing will be pushed."},
{"lineNum":"    6","line":"#"},
{"lineNum":"    7","line":"# This hook is called with the following parameters:"},
{"lineNum":"    8","line":"#"},
{"lineNum":"    9","line":"# $1 -- Name of the remote to which the push is being done"},
{"lineNum":"   10","line":"# $2 -- URL to which the push is being done"},
{"lineNum":"   11","line":"#"},
{"lineNum":"   12","line":"# If pushing without using a named remote those arguments will be equal."},
{"lineNum":"   13","line":"#"},
{"lineNum":"   14","line":"# Information about the commits which are being pushed is supplied as lines to"},
{"lineNum":"   15","line":"# the standard input in the form:"},
{"lineNum":"   16","line":"#"},
{"lineNum":"   17","line":"#   <local ref> <local sha1> <remote ref> <remote sha1>"},
{"lineNum":"   18","line":"#"},
{"lineNum":"   19","line":"# This sample shows how to prevent push of commits where the log message starts"},
{"lineNum":"   20","line":"# with \"WIP\" (work in progress)."},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"remote=\"$1\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   23","line":"url=\"$2\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   24","line":""},
{"lineNum":"   25","line":"z40=0000000000000000000000000000000000000000","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":"while read local_ref local_sha remote_ref remote_sha","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   28","line":"do"},
{"lineNum":"   29","line":"\tif [ \"$local_sha\" = $z40 ]","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   30","line":"\tthen"},
{"lineNum":"   31","line":"\t\t# Handle delete"},
{"lineNum":"   32","line":"\t\t:","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   33","line":"\telse"},
{"lineNum":"   34","line":"\t\tif [ \"$remote_sha\" = $z40 ]","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   35","line":"\t\tthen"},
{"lineNum":"   36","line":"\t\t\t# New branch, examine all commits"},
{"lineNum":"   37","line":"\t\t\trange=\"$local_sha\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   38","line":"\t\telse"},
{"lineNum":"   39","line":"\t\t\t# Update to existing branch, examine new commits"},
{"lineNum":"   40","line":"\t\t\trange=\"$remote_sha..$local_sha\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   41","line":"\t\tfi"},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"\t\t# Check for WIP commit"},
{"lineNum":"   44","line":"\t\tcommit=`git rev-list -n 1 --grep \'^WIP\' \"$range\"`","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   45","line":"\t\tif [ -n \"$commit\" ]","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   46","line":"\t\tthen"},
{"lineNum":"   47","line":"\t\t\techo >&2 \"Found WIP commit in $local_ref, not pushing\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   48","line":"\t\t\texit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   49","line":"\t\tfi"},
{"lineNum":"   50","line":"\tfi"},
{"lineNum":"   51","line":"done"},
{"lineNum":"   52","line":""},
{"lineNum":"   53","line":"exit 0","class":"lineNoCov","hits":"0","possible_hits":"0",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "shellspec spec", "date" : "2021-04-06 02:21:08", "instrumented" : 14, "covered" : 0,};
var merged_data = [];
