var data = {lines:[
{"lineNum":"    1","line":"#!/bin/sh"},
{"lineNum":"    2","line":"#"},
{"lineNum":"    3","line":"# Copyright (c) 2006, 2008 Junio C Hamano"},
{"lineNum":"    4","line":"#"},
{"lineNum":"    5","line":"# The \"pre-rebase\" hook is run just before \"git rebase\" starts doing"},
{"lineNum":"    6","line":"# its job, and can prevent the command from running by exiting with"},
{"lineNum":"    7","line":"# non-zero status."},
{"lineNum":"    8","line":"#"},
{"lineNum":"    9","line":"# The hook is called with the following parameters:"},
{"lineNum":"   10","line":"#"},
{"lineNum":"   11","line":"# $1 -- the upstream the series was forked from."},
{"lineNum":"   12","line":"# $2 -- the branch being rebased (or empty when rebasing the current branch)."},
{"lineNum":"   13","line":"#"},
{"lineNum":"   14","line":"# This sample shows how to prevent topic branches that are already"},
{"lineNum":"   15","line":"# merged to \'next\' branch from getting rebased, because allowing it"},
{"lineNum":"   16","line":"# would result in rebasing already published history."},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"publish=next","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   19","line":"basebranch=\"$1\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   20","line":"if test \"$#\" = 2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   21","line":"then"},
{"lineNum":"   22","line":"\ttopic=\"refs/heads/$2\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   23","line":"else"},
{"lineNum":"   24","line":"\ttopic=`git symbolic-ref HEAD` ||","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   25","line":"\texit 0 ;# we do not interrupt rebasing detached HEAD","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   26","line":"fi"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"case \"$topic\" in","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   29","line":"refs/heads/??/*)"},
{"lineNum":"   30","line":"\t;;"},
{"lineNum":"   31","line":"*)"},
{"lineNum":"   32","line":"\texit 0 ;# we do not interrupt others.","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   33","line":"\t;;"},
{"lineNum":"   34","line":"esac"},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"# Now we are dealing with a topic branch being rebased"},
{"lineNum":"   37","line":"# on top of master.  Is it OK to rebase it?"},
{"lineNum":"   38","line":""},
{"lineNum":"   39","line":"# Does the topic really exist?"},
{"lineNum":"   40","line":"git show-ref -q \"$topic\" || {","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   41","line":"\techo >&2 \"No such branch $topic\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   42","line":"\texit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   43","line":"}"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"# Is topic fully merged to master?"},
{"lineNum":"   46","line":"not_in_master=`git rev-list --pretty=oneline ^master \"$topic\"`","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   47","line":"if test -z \"$not_in_master\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   48","line":"then"},
{"lineNum":"   49","line":"\techo >&2 \"$topic is fully merged to master; better remove it.\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   50","line":"\texit 1 ;# we could allow it, but there is no point.","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   51","line":"fi"},
{"lineNum":"   52","line":""},
{"lineNum":"   53","line":"# Is topic ever merged to next?  If so you should not be rebasing it."},
{"lineNum":"   54","line":"only_next_1=`git rev-list ^master \"^$topic\" ${publish} | sort`","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   55","line":"only_next_2=`git rev-list ^master           ${publish} | sort`","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   56","line":"if test \"$only_next_1\" = \"$only_next_2\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   57","line":"then"},
{"lineNum":"   58","line":"\tnot_in_topic=`git rev-list \"^$topic\" master`","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   59","line":"\tif test -z \"$not_in_topic\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   60","line":"\tthen"},
{"lineNum":"   61","line":"\t\techo >&2 \"$topic is already up to date with master\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   62","line":"\t\texit 1 ;# we could allow it, but there is no point.","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   63","line":"\telse"},
{"lineNum":"   64","line":"\t\texit 0","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   65","line":"\tfi"},
{"lineNum":"   66","line":"else"},
{"lineNum":"   67","line":"\tnot_in_next=`git rev-list --pretty=oneline ^${publish} \"$topic\"`","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   68","line":"\t/usr/bin/perl -e \'","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   69","line":"\t\tmy $topic = $ARGV[0];","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   70","line":"\t\tmy $msg = \"* $topic has commits already merged to public branch:\\n\";","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   71","line":"\t\tmy (%not_in_next) = map {","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   72","line":"\t\t\t/^([0-9a-f]+) /;","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   73","line":"\t\t\t($1 => 1);","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   74","line":"\t\t} split(/\\n/, $ARGV[1]);","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   75","line":"\t\tfor my $elem (map {","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   76","line":"\t\t\t\t/^([0-9a-f]+) (.*)$/;","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   77","line":"\t\t\t\t[$1 => $2];","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   78","line":"\t\t\t} split(/\\n/, $ARGV[2])) {","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   79","line":"\t\t\tif (!exists $not_in_next{$elem->[0]}) {","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   80","line":"\t\t\t\tif ($msg) {","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   81","line":"\t\t\t\t\tprint STDERR $msg;","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   82","line":"\t\t\t\t\tundef $msg;","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   83","line":"\t\t\t\t}"},
{"lineNum":"   84","line":"\t\t\t\tprint STDERR \" $elem->[1]\\n\";","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   85","line":"\t\t\t}"},
{"lineNum":"   86","line":"\t\t}"},
{"lineNum":"   87","line":"\t\' \"$topic\" \"$not_in_next\" \"$not_in_master\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   88","line":"\texit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   89","line":"fi"},
{"lineNum":"   90","line":""},
{"lineNum":"   91","line":"<<\\DOC_END","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   92","line":""},
{"lineNum":"   93","line":"This sample hook safeguards topic branches that have been"},
{"lineNum":"   94","line":"published from being rewound."},
{"lineNum":"   95","line":""},
{"lineNum":"   96","line":"The workflow assumed here is:"},
{"lineNum":"   97","line":""},
{"lineNum":"   98","line":" * Once a topic branch forks from \"master\", \"master\" is never"},
{"lineNum":"   99","line":"   merged into it again (either directly or indirectly)."},
{"lineNum":"  100","line":""},
{"lineNum":"  101","line":" * Once a topic branch is fully cooked and merged into \"master\","},
{"lineNum":"  102","line":"   it is deleted.  If you need to build on top of it to correct"},
{"lineNum":"  103","line":"   earlier mistakes, a new topic branch is created by forking at"},
{"lineNum":"  104","line":"   the tip of the \"master\".  This is not strictly necessary, but"},
{"lineNum":"  105","line":"   it makes it easier to keep your history simple."},
{"lineNum":"  106","line":""},
{"lineNum":"  107","line":" * Whenever you need to test or publish your changes to topic"},
{"lineNum":"  108","line":"   branches, merge them into \"next\" branch."},
{"lineNum":"  109","line":""},
{"lineNum":"  110","line":"The script, being an example, hardcodes the publish branch name"},
{"lineNum":"  111","line":"to be \"next\", but it is trivial to make it configurable via"},
{"lineNum":"  112","line":"$GIT_DIR/config mechanism."},
{"lineNum":"  113","line":""},
{"lineNum":"  114","line":"With this workflow, you would want to know:"},
{"lineNum":"  115","line":""},
{"lineNum":"  116","line":"(1) ... if a topic branch has ever been merged to \"next\".  Young"},
{"lineNum":"  117","line":"    topic branches can have stupid mistakes you would rather"},
{"lineNum":"  118","line":"    clean up before publishing, and things that have not been"},
{"lineNum":"  119","line":"    merged into other branches can be easily rebased without"},
{"lineNum":"  120","line":"    affecting other people.  But once it is published, you would"},
{"lineNum":"  121","line":"    not want to rewind it."},
{"lineNum":"  122","line":""},
{"lineNum":"  123","line":"(2) ... if a topic branch has been fully merged to \"master\"."},
{"lineNum":"  124","line":"    Then you can delete it.  More importantly, you should not"},
{"lineNum":"  125","line":"    build on top of it -- other people may already want to"},
{"lineNum":"  126","line":"    change things related to the topic as patches against your"},
{"lineNum":"  127","line":"    \"master\", so if you need further changes, it is better to"},
{"lineNum":"  128","line":"    fork the topic (perhaps with the same name) afresh from the"},
{"lineNum":"  129","line":"    tip of \"master\"."},
{"lineNum":"  130","line":""},
{"lineNum":"  131","line":"Let\'s look at this example:"},
{"lineNum":"  132","line":""},
{"lineNum":"  133","line":"\t\t   o---o---o---o---o---o---o---o---o---o \"next\""},
{"lineNum":"  134","line":"\t\t  /       /           /           /"},
{"lineNum":"  135","line":"\t\t /   a---a---b A     /           /"},
{"lineNum":"  136","line":"\t\t/   /               /           /"},
{"lineNum":"  137","line":"\t       /   /   c---c---c---c B         /"},
{"lineNum":"  138","line":"\t      /   /   /             \\         /"},
{"lineNum":"  139","line":"\t     /   /   /   b---b C     \\       /"},
{"lineNum":"  140","line":"\t    /   /   /   /             \\     /"},
{"lineNum":"  141","line":"    ---o---o---o---o---o---o---o---o---o---o---o \"master\""},
{"lineNum":"  142","line":""},
{"lineNum":"  143","line":""},
{"lineNum":"  144","line":"A, B and C are topic branches."},
{"lineNum":"  145","line":""},
{"lineNum":"  146","line":" * A has one fix since it was merged up to \"next\"."},
{"lineNum":"  147","line":""},
{"lineNum":"  148","line":" * B has finished.  It has been fully merged up to \"master\" and \"next\","},
{"lineNum":"  149","line":"   and is ready to be deleted."},
{"lineNum":"  150","line":""},
{"lineNum":"  151","line":" * C has not merged to \"next\" at all."},
{"lineNum":"  152","line":""},
{"lineNum":"  153","line":"We would want to allow C to be rebased, refuse A, and encourage"},
{"lineNum":"  154","line":"B to be deleted."},
{"lineNum":"  155","line":""},
{"lineNum":"  156","line":"To compute (1):"},
{"lineNum":"  157","line":""},
{"lineNum":"  158","line":"\tgit rev-list ^master ^topic next"},
{"lineNum":"  159","line":"\tgit rev-list ^master        next"},
{"lineNum":"  160","line":""},
{"lineNum":"  161","line":"\tif these match, topic has not merged in next at all."},
{"lineNum":"  162","line":""},
{"lineNum":"  163","line":"To compute (2):"},
{"lineNum":"  164","line":""},
{"lineNum":"  165","line":"\tgit rev-list master..topic"},
{"lineNum":"  166","line":""},
{"lineNum":"  167","line":"\tif this is empty, it is fully merged to \"master\"."},
{"lineNum":"  168","line":""},
{"lineNum":"  169","line":"DOC_END"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "shellspec spec", "date" : "2021-04-06 02:21:08", "instrumented" : 43, "covered" : 0,};
var merged_data = [];
