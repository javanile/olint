var data = {lines:[
{"lineNum":"    1","line":"#!/bin/sh"},
{"lineNum":"    2","line":"#"},
{"lineNum":"    3","line":"# An example hook script to prepare the commit log message."},
{"lineNum":"    4","line":"# Called by \"git commit\" with the name of the file that has the"},
{"lineNum":"    5","line":"# commit message, followed by the description of the commit"},
{"lineNum":"    6","line":"# message\'s source.  The hook\'s purpose is to edit the commit"},
{"lineNum":"    7","line":"# message file.  If the hook fails with a non-zero status,"},
{"lineNum":"    8","line":"# the commit is aborted."},
{"lineNum":"    9","line":"#"},
{"lineNum":"   10","line":"# To enable this hook, rename this file to \"prepare-commit-msg\"."},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":"# This hook includes three examples. The first one removes the"},
{"lineNum":"   13","line":"# \"# Please enter the commit message...\" help message."},
{"lineNum":"   14","line":"#"},
{"lineNum":"   15","line":"# The second includes the output of \"git diff --name-status -r\""},
{"lineNum":"   16","line":"# into the message, just before the \"git status\" output.  It is"},
{"lineNum":"   17","line":"# commented because it doesn\'t cope with --amend or with squashed"},
{"lineNum":"   18","line":"# commits."},
{"lineNum":"   19","line":"#"},
{"lineNum":"   20","line":"# The third example adds a Signed-off-by line to the message, that can"},
{"lineNum":"   21","line":"# still be edited.  This is rarely a good idea."},
{"lineNum":"   22","line":""},
{"lineNum":"   23","line":"COMMIT_MSG_FILE=$1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   24","line":"COMMIT_SOURCE=$2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   25","line":"SHA1=$3","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":"/usr/bin/perl -i.bak -ne \'print unless(m/^. Please enter the commit message/..m/^#$/)\' \"$COMMIT_MSG_FILE\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   28","line":""},
{"lineNum":"   29","line":"# case \"$COMMIT_SOURCE,$SHA1\" in"},
{"lineNum":"   30","line":"#  ,|template,)"},
{"lineNum":"   31","line":"#    /usr/bin/perl -i.bak -pe \'"},
{"lineNum":"   32","line":"#       print \"\\n\" . `git diff --cached --name-status -r`"},
{"lineNum":"   33","line":"# \t if /^#/ && $first++ == 0\' \"$COMMIT_MSG_FILE\" ;;"},
{"lineNum":"   34","line":"#  *) ;;"},
{"lineNum":"   35","line":"# esac"},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"# SOB=$(git var GIT_COMMITTER_IDENT | sed -n \'s/^\\(.*>\\).*$/Signed-off-by: \\1/p\')"},
{"lineNum":"   38","line":"# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\""},
{"lineNum":"   39","line":"# if test -z \"$COMMIT_SOURCE\""},
{"lineNum":"   40","line":"# then"},
{"lineNum":"   41","line":"#   /usr/bin/perl -i.bak -pe \'print \"\\n\" if !$first_line++\' \"$COMMIT_MSG_FILE\""},
{"lineNum":"   42","line":"# fi"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "shellspec spec", "date" : "2021-04-06 02:21:08", "instrumented" : 4, "covered" : 0,};
var merged_data = [];
